# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pr: none

variables:
  # ${{ if eq( variables['Project'], 'PlaneFinding' ) }}:
    # SolutionPath: 'SpatialMapping/PlaneFinding/PlaneFinding.sln'
  SolutionPath: 'SpatialMapping/PlaneFinding/PlaneFinding.sln'
  BuildConfiguration: 'Release'

jobs:
- job:
  pool:
    vmImage: 'windows-2019'
  workspace:
    clean: all
  strategy:
    matrix:
      x86:
        BuildPlatform: x86
      x64:
        BuildPlatform: x64
      ARM:
        BuildPlatform: ARM
      ARM64:
        BuildPlatform: ARM64
  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(SolutionPath)'
      
  - task: VSBuild@1
    inputs:
      solution: '$(SolutionPath)'
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'

  - task: VSTest@2
    condition: and(succeeded(), eq(variables['BuildPlatform'], 'x86'))
    inputs:
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'

  - task: CopyFiles@2
    displayName: 'Copy binaries to artifacts staging directory'
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/SpatialMapping/PlaneFinding/Release
      contents: '**/*.dll'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    inputs:
      artifactName: $(Project)

# - job:
#   dependsOn: x86
#   steps:
#   - task: VSTest@2
#     inputs:
#       configuration: '$(BuildConfiguration)'

  # - task: CopyFiles@2
  #   displayName: 'Copy x86 binaries to artifacts staging directory'
  #   inputs:
  #     sourceFolder: $(Build.SourcesDirectory)/SpatialMapping/PlaneFinding/Release
  #     contents: '**/*.dll'
  #     targetFolder: $(Build.ArtifactStagingDirectory)

  # - task: PublishBuildArtifacts@1
  #   displayName: 'Publish artifacts'
  #   inputs:
  #     artifactName: Binaries
